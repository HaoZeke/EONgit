
.. _parallel_replica:

================================
Parallel Replica
================================

Parallel Replica Dynamics (PRD) is the simplest and the most accurate way to do
accelerated-MD simulation. The only assumption made in this method is that the
reactions satisfy first order kinetics. 

.. math::

     \mathrm{Pr}(t) = k \exp (-k t)

PRD boosts the simulation linearly with the number of replicas and can be
easily combined with with other methods for extending the MD time scale, e.g.
Hyperdynamics method, giving a multiplicative effect in the time scale gain.

In Voter's approach,  N replicas of the system are made at first and then the
momentum in each replica is randomized and dephasing stage is employed to
decorrelate their motions. The simulation clock starts after this dephasing
stage and stops when the first transitions is detected in any of replica.
Because those N trajectories are independent, they can explore the phase space
N times faster than using a single trajectory. The overall simulation clock is
advanced by the sum of all the simulation times in replicas. 

In order to work with distributed computing, we have modified the traditional
scheme for running PRD. The replica generating and dephasing stage is exactly
the same.  However, we make all replicas run the same number of MD steps to
avoid biasing the successful transition trajectories. In other words, results
will only be reported back when the clients finish their full trajectories. The
server increments the simulation time :math:`t` until the first transition
occurs.

In order to run Parallel Replica, set **job** to *parallel_replica* in the
**[Main]** section. For regular MD all the parameters can be set in the
**[Dynamics]** section. Our parallel replica can also be combined with
Hyperdynamics by using Bond-Boost method. You can use this feature by setting
**bias_potential** to *bond_boost* in the **[Hyperdynamics]** section.

For detailed information about Parallel Replica and Bond-Boost, please refer to
papers by:

::

   "Parallel replica method for dynamics of infrequent events‚Äù
                                        A. F. Voter, Phys Rev B 57 13985 (1998)

   "Accelerated molecular-dynamics of rare events with the bond-boost method"
               R. A. Miron and K. A. Fichthorn, J. Chem. Phys. 119, 6210 (2003)

The temperature for the dynamics run is set in the **[Main]** section.

Dynamics
--------

**time_step**:

    Default: 1.0

    The length of each MD step in femtoseconds.

**auto_stop**: 
 
    Default: false

    Whether or not stop the job when a new state is found. For boinc communicator
    this value should be set to *false*. 

**steps**:

    Default: 1000

    The number of MD steps to run.

**dephase_steps**: 

    Default: 200

    Number of steps used to decorrelate the replica trajectories. The momenta
    will be inversed when reaching the dividing surface to prevent transitions
    occurring during this period. 

**check_period**: 

    Default: 500

    How frequently the state of system is checked. Every **check_period**
    steps, the current structure and the initial one will be compared  to tell
    whether a newstate has been reached. Also note when you set **refine** as
    *true*, the code will keep a buffer array consisting of
    **check_period/record_resolution+1** atomic configurations, which may
    increase the usage of memory.

**refine_transition_time**: 

    Default: True

    Whether or not the transition time is refined. When this option is turned
    on, the code will keep an array consisted by
    **check_period/record_resolution+1** atomic configurations. A Binary search
    algorithm is employed to determine the transition step. Otherwise the
    transition step would be the first in which a new state was found. This
    function reduces the need for a smaller check_period.  And the accuracy of
    transition time is **record_resolution*timestep**.

**record_resolution**:

    Default: 1 
 
    How often the system is recorded to the buffer array when the
    **refine_transition_time** option is activated. Increasing the value of
    **record_resolution** lowers the accuracy of the transition time estimate
    but also reduces memory usage and speeds up refinement of the transition
    step.
  
**post_transition_steps**: 

    Default: 500

    Number of MD steps which will be performed after a new state has been found.
    A state check will be employed after these **post_transition_steps** to
    confirm that the state is stable. This additional check helps avoid
    meta-stable states. A value similar to **dephase_steps** is recommended.

**thermo_type**:

    Default: *andersen*

    Options:

    *andersen*: Andersen thermostat with Verlet algorithm

    *nose_hoover*: Nose-Hover thermostat with Verlet algorithm 

**andersen_alpha**:

    Default: 0.2

    The collision strength :math:`\alpha` in the Andersen thermostat. If a
    collision happened, the new velocity is: 

    .. math::

      V_{\mathrm{new}} = \sqrt{(1-\alpha^2)}*V_{\mathrm{old}}+\alpha*V_{\mathrm{gaussian}}

**andersen_collision_steps**: 

    Default: 10.0

    The collision period (in MD steps) for the Andersen thermostat. 
        
**nose_mass**:

    Default: 1.0
    
    The effective mass of the additional degree of freedom in the Nose-Hoover
    thermostat, which determines the rate of heat transfer.
    
Hyperdynamics
-------------

**bias_potential**: 

    Default: *none*

    Options:

        *none* : with no bias potential, run regular MD 

        *bond_boost* : bond boost method from Miron and Fichthorn
   
**bb_dvmax**:

    Default: 0.0

    The magnitude of the bond-boost bias potential. It should be
    smaller than the barrier of any transition.

**bb_rmd_steps**: 

    Default: 200
 
    Number of MD steps used to determine the equilibrium bond length before the bias potential is added.
  
**bb_stretch_threshold**:

    Default: 0.001

    Defines the bond-boost dividing surface. It should be smaller
    than the maximum fractional nearest-neighbor bond stretch or compression
    at any transition state. 
  
**bb_ds_curvature**:

    Default: 0.90 

    The curvature near the bond-boost dividing surface, it should
    has a value <= 1. We recommend the value to be *0.9-0.98*.

**bb_rcut**: 

    Default: 3.0

    All bonds which belong to the tagged atoms and are
    shorter than a cutoff of rcut will be included in the bond-boost potential.


.. _setup:

=====
Setup
=====

EON is capable of running in both local and distributed mode. 

.. _Local mode
.. _----------

To enable execution in local mode it is sufficient to go through the steps described in :ref:`installation`. With those steps performed it is possible to start an AKMC simulation, however, one might want to change ``number_of_CPUs`` in ``config.ini`` to the match number of cores on the computer which EON is executed on to in order to enable several saddle point searches to be carried out in parallel.

.. _Distributed mode
.. _----------------

When executed in distributed mode EON relies on preinstalled middleware to handle communication between the server and the clients. In the following are short descriptions on how to prepare different middleware to work with EON.

BOINC
-----

First take a look at the official `BOINC <http://boinc.berkeley.edu>`_ page and `Computing with BOINC <http://boinc.berkeley.edu/trac/wiki/ProjectMain>`_, which served as inspiration for this text. To obtain the source code for BOINC execute::

    svn co http://boinc.berkeley.edu/svn/branches/server_stable

and rename this obtained folder to ``boinc``::

    mv server_stable boinc
    cd boinc

How to build and prepare the *BOINC server* and the *BOINC library*, which the EON client code relies on, are described in the following.

* :ref:`BOINC server <boinc_server>`
* :ref:`BOINC library <boinc_library>`

Create New Project
^^^^^^^^^^^^^^^^^^

Before starting to create a new project take a look at the page `BOINC new project <http://boinc.berkeley.edu/trac/wiki/ProjectMain#CreatingaBOINCproject>`_ and change to the user ``boincadm``::

    su boincadm

Make sure the ``hostname`` is the same as the address used when connecting to the computer. These settings are specified in ``/etc/hosts`` and ``/etc/hostname``. Enter the Boinc tools directiory and create a new project::

    cd boinc/tools ./make_project eon

where ``eon`` can be replaced with another project name if preferred. Follow the instructions in the created readme file until the command ``bin/xadd``. Also make sure that the ``homedir`` where the project is located can be executed (has permission ``711`` rather than the default ``700``). 

Secure ops Web Pages
^^^^^^^^^^^^^^^^^^^^

To restrict access to the administrative web pages for the project execute go to ``html/ops`` and execute::

    cd projects/eon/html/ops 
    htpasswd -c .htpasswd USERNAME

where ``USERNAME`` is the name of the user that should have access to the ops page. In ``eon/html/project/project.inc`` edit function ``auth_ops()`` by changing the default deny access ``auth_ops_deny()`` to ``//auth_ops_deny()``::

    cd ../project/ 
    nano project.inc

Link EON to BOINC
^^^^^^^^^^^^^^^^^

Go to the root of the ``eon`` project and replace ``project.xml`` with the one provided in the EON source code (``boinc`` directory in the EON source code)::

    cd projects/eon 
    mv project.xml project.xml.org 
    cp /PATH_EON_SOURCE_CODE/boinc/project.xml .

Furthermore copy the ``template`` files::

    cp /PATH_EON_SOURCE_CODE/boinc/client_re.xml ./template/client_re.xml
    cp /PATH_EON_SOURCE_CODE/boinc/client_wu.xml ./template/client_wu.xml

Compile the EON client with BOINC support::

    cd /PATH_EON_SOURCE_CODE/client 
    make BOINC=1

Copy the obtained executeable to the ``apps`` area of the BOINC project::

    cd projects/eon/apps/ 
    mkdir client 
    cd client 
    mkdir client_VERSION_PLATFORM 
    cd client_VERSION_PLATFORM
    cp /PATH_EON_SOURCE_CODE/client client_VERSION_PLATFORM

where the ``VERSION`` and ``PLATFORM`` would be ``1.0`` and ``i686-pc-linux-gnu`` for the first version (``1.0``) of the executeable running on intel architecture on a linux platform (``i686-pc-linux-gnu``). 

Add the following deamons to the ``config.xml``::

    nano projects/eon/config.xml
    
    <daemon> 
      <cmd>
        sample_trivial_validator -d 3 -app client
      </cmd>
    </daemon> 
    <daemon>
      <cmd> 
        sample_assimilator -d 3 -app client
      </cmd>
    </daemon>

To get the newly added application into the BOINC go to the ``root`` of project and run::

    cd ../../../ 
    ./bin/xadd
    ./bin/update_versions
    ./bin/start

Add the environmental variable ``BOINC_PROJECT_DIR`` containing the path to the project::

     nano ~/.bash_profile 

     BOINC_PROJECT_DIR=".../eon"
     export BOINC_PROJECT_DIR

and finally to enable EON to use BOINC change the paths stated in the EON configuration file ``config.ini``.

ARC
---

To install ARC using a package manager `NorduGrid <http://nordugrid.org>`_ must be added to the list repositories. A description how to do so can be found at `repos <http://download.nordugrid.org/repos.html>`_. With the repository in
place the following can easily be installed:

* ``globus-gsi-cert-utils-progs``
* ``globus-proxy-utils``
* ``ca-nordugrid``
* ``nordugrid-arc-client``
* ``nordugrid-arc-python``

In order to execute ``ARC`` your two personal access files must be located in the directory:

* ``.globus``
    * ``userkey.pem``, your personal key that was created when the certificate was requested
    * ``usercert.pem``, your certificate that was send by email when access was granted

.. _An optional list of the clusters to be sampled when a job can be stored in the 
.. _directory ``~\.arc`` in the file ``client.conf``. An example of it contest is:
..
.. _[client]
.. _giis="ldap://giis.csc.fi:2135/O=Grid/Mds-Vo-name=Finland"



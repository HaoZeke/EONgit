0
Get the LAMMPS source code by fetching the tarball.

(Optional libraries)
If on of the more exotic potentials are to be used start by entering the library '$LAMMPS/lib' and build it.
Here MEAM is used as an example:
 cd $LAMMPS/lib/meam
 make -f Makefile.gfortran

1
The interface to the LAMMPS library is defined in the files library.cpp and library.h
Go to the '$LAMMPS/src' directory and fetch these files from the EON directory '$EON/client/potentials/LAMMPS/filesForLAMMPS/':
 cd $LAMMPS/src
 cp $EON/client/potentials/LAMMPS/filesForLAMMPS/library.* .

2
Enter the '$LAMMPS/src/STUBS' directory and build the fake MPI library for LAMMPS:
 cd $LAMMPS/src/STUBS
 make

3
Enter the '$LAMMPS/src/MAKE' directory and change 'Makefile.serial':
 CC =		g++
 LINK =		g++

4
Enter '$LAMMPS/src' and build LAMMPS (section 2.2 in LAMMPS documentation):
 cd $LAMMPS/src
 make yes-meam (Active optional library)
 make serial

5
Stay in '$LAMMPS/src/MAKE' directory and build LAMMPS as a library (section 2.4 in LAMMPS documentation):
 make makelib
 make -f Makefile.lib serial

6
Go back to the directory in EON for the LAMMPS potential and enter the directory '$EON/client/potentials/LAMMPS/filesFromLAMMPS'.
Copy the needed headers files:

 cd $EON/client/potential/LAMMPS/filesFromLAMMPS 
 cp $LAMMPS/src/input.h .
 cp $LAMMPS/src/atom.h .
 cp $LAMMPS/src/lammps.h .
 cp $LAMMPS/src/library.h .
 cp $LAMMPS/src/STUBS/mpi.h .

If change atom.h by adding the line marked with the arrow:
 namespace LAMMPS_NS {
 typedef int bigint;  <----

Go one directory back and fetch the libraries:

 cd ..
 cp $LAMMPS/src/liblmp_serial.a .
 cp $LAMMPS/src/STUBS/libmpi.a .
 cp $LAMMPS/lib/meam/libmeam.a .

7
Go to eon '$EON/client' and build the EON client.
 cd $EON/client
 make LAMMPS_POT=1

